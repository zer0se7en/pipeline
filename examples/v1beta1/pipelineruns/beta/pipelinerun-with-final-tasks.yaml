# Task to cleanup shared workspace
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: cleanup-workspace
spec:
  workspaces:
    # Shared workspace where git repo is cloned
    - name: source
  steps:
    - name: check-application-dir-has-source
      image: ubuntu
      script: |
        if [ ! -d "$(workspaces.source.path)/application/" ]; then
          echo "Something went wrong and could not find application source under $(workspaces.source.path)/application/"
          exit 1
        fi
    - name: cleanup-workspace
      image: ubuntu
      script: |
        rm -rf $(workspaces.source.path)/application/
    - name: verify-application-dir-has-gone
      image: ubuntu
      script: |
        if [ -d "$(workspaces.source.path)/application/" ]; then
          echo "Something went wrong cleaning up and the application source still exists under $(workspaces.source.path)/application/"
          exit 1
        fi
---

# Pipeline to clone repo into shared workspace and cleanup the workspace after done
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: clone-cleanup-workspace
spec:
  workspaces:
    # common workspace where git repo is cloned and needs to be cleanup after done
    - name: git-source
  tasks:
    # Clone app repo to workspace
    - name: clone-app-repo
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/tektoncd/catalog.git
          - name: pathInRepo
            value: /task/git-clone/0.9/git-clone.yaml
          - name: revision
            value: main
      params:
        - name: url
          value: https://github.com/tektoncd/community.git
        - name: subdirectory
          value: application
      workspaces:
        - name: output
          workspace: git-source
  finally:
    # Cleanup workspace
    - name: cleanup
      taskRef:
        name: cleanup-workspace
      workspaces:
        - name: source
          workspace: git-source
    - name: check-git-commit
      params:
        - name: commit
          value: $(tasks.clone-app-repo.results.commit)
      taskSpec:
        params:
          - name: commit
        steps:
          - name: check-commit-initialized
            image: alpine
            script: |
              if [[ ! $(params.commit) ]]; then
                exit 1
              fi
---

# PipelineRun to execute pipeline - clone-into-workspace-and-cleanup-workspace
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: write-and-cleanup-workspace
spec:
  pipelineRef:
    name: clone-cleanup-workspace
  serviceAccountName: 'default'
  podTemplate:
    securityContext:
      fsGroup: 65532 # Make volumes accessible by non-root user for git-clone catalog task
  workspaces:
    - name: git-source
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
---
